{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/communication.service.ts","webpack:///./src/app/common/websocket.service.ts","webpack:///./src/app/guards/auth-guard.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/user.ts","webpack:///./src/app/message-parser/message-object/product-line.ts","webpack:///./src/app/message-parser/message-object/summary.ts","webpack:///./src/app/message-parser/parser.service.ts","webpack:///./src/app/product-line/product-line.component.css","webpack:///./src/app/product-line/product-line.component.html","webpack:///./src/app/product-line/product-line.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/summary-widget/summary-widget.component.css","webpack:///./src/app/summary-widget/summary-widget.component.html","webpack:///./src/app/summary-widget/summary-widget.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"wrapper\\\">\\n  <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column \\\">\\n\\n    <div id=\\\"content\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <router-outlet></router-outlet>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'smartproduction';\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.router.navigate(['/login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SummaryWidgetComponent } from './summary-widget/summary-widget.component';\nimport { ProductLineComponent } from './product-line/product-line.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuardService } from './guards/auth-guard.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MessageEvents } from './message-parser/parser.service';\nimport {\n  MatCardModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatListModule,\n  MatProgressBarModule,\n  MatSliderModule\n} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst appRoutes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'home', component: HomeComponent, canActivate: [AuthGuardService]}\n];\n\n// @ts-ignore\n@NgModule({\n  declarations: [\n    AppComponent,\n    SummaryWidgetComponent,\n    ProductLineComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatListModule,\n    MatDividerModule,\n    MatCardModule,\n    MatExpansionModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    RouterModule.forRoot(\n      appRoutes,\n      {enableTracing: true}\n    ),\n    ReactiveFormsModule,\n    MatSliderModule,\n    FormsModule\n  ],\n  providers: [MessageEvents],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { WebsocketService } from './websocket.service';\n\nimport { map } from 'rxjs/operators';\n\nconst WS_URL = 'ws://18.188.153.242:9000/WebSocket';\n// const WS_URL = 'ws://localhost:8080';\n\nexport interface Message {\n  author: string;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommunicationService {\n\n  public messages: Subject<any>;\n\n  constructor(wsService: WebsocketService) {\n    this.messages = <Subject<any>> wsService.connect(WS_URL).pipe(map(\n      (response: MessageEvent): any => {\n        const data = JSON.parse(response.data);\n        return data;\n      }\n    ));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  constructor() {\n  }\n\n  private subject: Rx.Subject<MessageEvent>;\n\n  public connect(url): Rx.Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(url);\n      console.log('Successfully connected: ' + url);\n    }\n    return this.subject;\n  }\n\n  private create(url): Rx.Subject<MessageEvent> {\n    const ws = new WebSocket(url);\n\n    const observable = Rx.Observable.create((obs: Rx.Observer<MessageEvent>) => {\n      ws.onmessage = obs.next.bind(obs);\n      ws.onerror = obs.error.bind(obs);\n      ws.onclose = obs.complete.bind(obs);\n      return ws.close.bind(ws);\n    });\n    const observer = {\n      next: (data: any) => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify(data));\n        }\n      }\n    };\n    return Rx.Subject.create(observer, observable);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('sessionId')) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-summary-widget></app-summary-widget>\\n<app-product-line></app-product-line>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommunicationService } from '../common/communication.service';\nimport { ParserService } from '../message-parser/parser.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private communicationService: CommunicationService, private parser: ParserService) {\n    this.communicationService.messages.subscribe(msg => {\n      this.parser.parserMessage(msg);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row justify-content-center\\\">\\n\\n  <div class=\\\"col-xl-8 col-lg-8 col-md-8\\\">\\n\\n    <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\n      <div class=\\\"card-body p-0\\\">\\n        <!-- Nested Row within Card Body -->\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"p-5 login\\\">\\n              <div class=\\\"text-center\\\">\\n                <h1 class=\\\"h4 text-gray-900 mb-4\\\">Smart Production!</h1>\\n              </div>\\n              <form class=\\\"user\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"email\\\" formControlName=\\\"loginName\\\" class=\\\"form-control form-control-user\\\" id=\\\"exampleInputEmail\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter User Name...\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" formControlName=\\\"password\\\"  class=\\\"form-control form-control-user\\\" id=\\\"exampleInputPassword\\\" placeholder=\\\"Password\\\">\\n                </div>\\n\\n                <button class=\\\"btn btn-primary btn-user btn-block\\\">\\n                  Login\\n                </button>\\n              </form>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { User } from './user';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private authService: AuthService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      loginName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    const user = new User();\n    user.reqType = 1;\n    user.loginName = this.loginForm.get('loginName').value;\n    user.password = this.loginForm.get('password').value;\n    this.authService.login(user);\n  }\n\n}\n","export class User {\n  reqType: number;\n  loginName: string;\n  password: string;\n}\n","export class ProductLine {\n  lineCode: string;\n  startTime: Date;\n  numberOfMachines: number;\n  totalTIme: number;\n  avgTroughPut: number;\n  expectedHourlyRate: number;\n  expectedMinuteRate: number;\n  itemRate: number;\n  actualHourlyRate: number;\n  actualMinuteRate: number;\n  currentitemProcessingTime: number;\n  status: number;\n  responseType: number;\n  lastItemEndTime: Date;\n  currentProduct: any;\n\n  constructor(m) {\n    this.parserData(m);\n  }\n\n  parserData(msg) {\n    this.lineCode = msg.lineCode;\n    this.startTime = msg.startTime;\n    this.numberOfMachines = msg.numberOfMachines;\n    this.totalTIme = msg.totalTIme;\n    this.avgTroughPut = msg.avgavgTroughPut;\n    this.expectedHourlyRate = msg.expectedHourlyRate;\n    this.expectedMinuteRate = msg.expectedHourlyRate;\n    this.itemRate = msg.itemRate;\n    this.actualHourlyRate = msg.actualHourlyRate;\n    this.actualMinuteRate = msg.actualMinuteRate;\n    this.currentitemProcessingTime = msg.currentitemProcessingTime;\n    this.status = msg.status;\n    this.responseType = msg.responseType;\n    this.lastItemEndTime = msg.lastItemEndTime;\n    this.currentProduct = msg.currentProduct;\n  }\n}\n","export class Summary {\n  totalProductLine: number;\n  totalProductLineInOperation: number;\n  dailyTotalExpectedOutput: number;\n  currentTotalOutput: number;\n\n  constructor(m) {\n    this.parserData(m);\n  }\n\n  parserData(msg) {\n    this.totalProductLine = msg.totalProductLine;\n    this.totalProductLineInOperation = msg.totalProductLine_in_Operation;\n    this.dailyTotalExpectedOutput = msg.dailyTotalExpectedOutput;\n    this.currentTotalOutput = msg.currentTotalOutput;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Summary } from './message-object/summary';\nimport { ProductLine } from './message-object/product-line';\nexport class MessageEvents {\n  summaryUpdate: EventEmitter<Summary> = new EventEmitter();\n  productLineUpdate: EventEmitter<ProductLine> = new EventEmitter();\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParserService {\n\n\n  constructor(private messageEvents: MessageEvents) {\n  }\n\n  parserMessage(message: any) {\n\n    switch (message.responseType) {\n      case 103:\n        this.messageEvents.summaryUpdate.emit(new Summary(message));\n        break;\n      case 105:\n        this.messageEvents.productLineUpdate.emit(new ProductLine(message));\n        break;\n    }\n  }\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtbGluZS9wcm9kdWN0LWxpbmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h6 class=\\\"m-0 font-weight-bold text-primary\\\" style=\\\"margin-top: 15px;margin-bottom: 15px\\\">Production Lines</h6>\\n<div class=\\\"row margin-bottom\\\" *ngFor=\\\"let productLine of productLines; trackBy:trackBy\\\">\\n\\n  <!-- Content Column -->\\n  <div class=\\\"col-lg-12 mb-12\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header class=\\\"row\\\">\\n          <mat-panel-title  >\\n            <h5 class=\\\"m-0 font-weight-bold text-primary\\\">{{productLine.lineCode}} </h5>\\n          </mat-panel-title>\\n          <mat-panel-description  >\\n            <mat-slider\\n              class=\\\"example-margin\\\"\\n              [disabled]=\\\"true\\\"\\n              [invert]=\\\"false\\\"\\n              [max]=\\\"100\\\"\\n              [min]=\\\"0\\\"\\n              [step]=\\\"1\\\"\\n              [thumbLabel]=\\\"true\\\"\\n              [tickInterval] = '1.5'\\n              [(ngModel)]=\\\"productLine.currentProduct.currentTotalCount\\\"\\n              [vertical]=\\\"false\\\">\\n\\n            </mat-slider>\\n<!--              <mat-progress-bar-->\\n<!--                class=\\\"example-margin\\\"-->\\n<!--                [color]=\\\"color\\\"-->\\n<!--                [mode]=\\\"mode\\\"-->\\n<!--                [value]=\\\"productLine.currentProduct.currentTotalCount\\\">-->\\n<!--              </mat-progress-bar>-->\\n<!--            </section>-->\\n<!--              <div class=\\\"progress-bar bg-info\\\" role=\\\"progressbar\\\" style=\\\"width: 20%\\\" aria-valuenow=\\\"{{productLine.currentProduct.currentTotalCount}}\\\" aria-valuemin=\\\"0\\\"-->\\n<!--                   aria-valuemax=\\\"{{productLine.totalTIme}}\\\"></div>-->\\n<!--            </div>-->\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"small font-weight-bold\\\">{{productLine.lineCode}} <span class=\\\"float-right\\\">20%</span></h4>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-7 mb-7\\\">\\n              <mat-card class=\\\"example-card bg-warning\\\">\\n                <mat-card-header>\\n                  <h6 class=\\\"m-0 font-weight-bold text-white \\\">Product Line Summary</h6>\\n                </mat-card-header>\\n                <mat-card-content>\\n                  <mat-list>\\n                    <mat-list-item><b>Start Time : </b> {{productLine.startTime}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Last Item End Time : </b> {{productLine.lastItemEndTime}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Number Of Machines: </b>{{productLine.numberOfMachines}}\\n                    </mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Total Time : </b> {{productLine.totalTIme}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Expected Hourly Rate: </b> {{productLine.expectedHourlyRate}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Expected Minute Rate: </b> {{productLine.expectedMinuteRate}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Item Rate: </b> {{productLine.itemRate}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Actual Hourly Rate: </b> {{productLine.actualHourlyRate}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Actual Minute Rate: </b> {{productLine.actualMinuteRate}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Current Item Processing Time: </b> {{productLine.currentitemProcessingTime}}</mat-list-item>\\n                  </mat-list>\\n                </mat-card-content>\\n              </mat-card>\\n            </div>\\n\\n            <div class=\\\"col-lg-5 mb-5\\\">\\n              <mat-card class=\\\"example-card bg-success \\\">\\n                <mat-card-header>\\n                  <h6 class=\\\"m-0 font-weight-bold text-white\\\"> Current Product</h6>\\n                </mat-card-header>\\n                <mat-card-content>\\n                  <mat-list>\\n                    <mat-list-item><b>Product Code :</b> {{productLine.currentProduct.productCode}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Avg Cycle Time :</b> {{productLine.currentProduct.avgCycleTime}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Current Total Count : </b>{{productLine.currentProduct.currentTotalCount}}\\n                    </mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Cost :</b> {{productLine.currentProduct.cost}}</mat-list-item>\\n                    <mat-divider></mat-divider>\\n                    <mat-list-item><b>Expected Profit :</b> {{productLine.currentProduct.exptectedProfit}}</mat-list-item>\\n                  </mat-list>\\n                </mat-card-content>\\n              </mat-card>\\n            </div>\\n          </div>\\n        </div>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n</div>\\n<br>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageEvents } from '../message-parser/parser.service';\nimport { ProductLine } from '../message-parser/message-object/product-line';\nimport _ from 'lodash';\n\n// @ts-ignore\n@Component({\n  selector: 'app-product-line',\n  templateUrl: './product-line.component.html',\n  styleUrls: ['./product-line.component.css']\n})\nexport class ProductLineComponent implements OnInit {\n  productLines: ProductLine[] = [];\n  color = 'primary';\n  mode = 'determinate';\n  constructor(private messageEvents: MessageEvents) {\n    this.messageEvents.productLineUpdate.subscribe(data => {\n      const index = _.findIndex(this.productLines, {lineCode: data.lineCode});\n      if (index > -1) {\n        data.currentProduct = data.currentProduct || {};\n        this.productLines.splice(index, 1, data);\n\n      } else {\n        data.currentProduct = data.currentProduct || {};\n        this.productLines.push(data);\n      }\n\n    });\n  }\n\n  ngOnInit() {\n  }\n  trackBy(index, item) {\n    return item.lineCode; // or item.id\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../login/user';\nimport { CommunicationService } from '../common/communication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router: Router, private communicationService: CommunicationService) {\n  }\n\n  login(user: User): void {\n    this.communicationService.messages.next(user);\n\n    this.communicationService.messages.subscribe(msg => {\n      if (msg.responseType === 101 && msg.sid) {\n        localStorage.setItem('sessionId', msg.sid);\n        this.router.navigate(['/home']);\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1bW1hcnktd2lkZ2V0L3N1bW1hcnktd2lkZ2V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"row justify-content-center summary\\\">\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\"># Of Products</div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{summary.totalProductLine}}</div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n    <div class=\\\"card  border-left-success shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">In Operation</div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{summary.totalProductLineInOperation}}</div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">ExpectedOutput</div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{summary.dailyTotalExpectedOutput}}</div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center\\\">\\n          <div class=\\\"col mr-2\\\">\\n            <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Current Output</div>\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{summary.currentTotalOutput}}</div>\\n          </div>\\n          <div class=\\\"col-auto\\\">\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { MessageEvents } from '../message-parser/parser.service';\n\n\n@Component({\n  selector: 'app-summary-widget',\n  templateUrl: './summary-widget.component.html',\n  styleUrls: ['./summary-widget.component.css']\n})\nexport class SummaryWidgetComponent implements OnInit {\n  public summary: any = {};\n\n  constructor(private messageEvents: MessageEvents) {\n    this.messageEvents.summaryUpdate.subscribe(data => {\n      this.summary = data;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}